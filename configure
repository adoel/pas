#!/bin/bash

BIN_FILE="./bin/pas"
CMD_DIR="./gen"
CMD_FILE="$CMD_DIR/pas.js"

mkdir -p "$CMD_DIR"

cat > "$CMD_FILE" <<EOL
// libdir
global.APP_LIB_DIR = '$PWD/lib';

// includes
// global.APP_INCLUDES = {
//     providers: [],
//     profiles: []
// };

var PolyfillPromise = require('promise');
if (global.Promise) {
    for(var i in PolyfillPromise) {
        if (!global.Promise[i]) {
            global.Promise[i] = PolyfillPromise[i];
        }
    }
} else {
    global.Promise = PolyfillPromise;
}

EOL

# echo "// include providers" >> "$CMD_FILE"
# ls lib/providers |  while read a; do
#     echo "APP_INCLUDES.providers.push('../lib/providers/${a%.*}');" >> "$CMD_FILE"
# done

# echo "// include profiles" >> "$CMD_FILE"
# ls lib/profiles |  while read a; do
#     echo "APP_INCLUDES.profiles.push('../lib/profiles/${a%.*}');" >> "$CMD_FILE"
# done

cat >> "$CMD_FILE" <<EOL

var dummyToForceIncludeForBundle = false;
if (dummyToForceIncludeForBundle) {
EOL

# echo "    // tasks" >> "$CMD_FILE"
# ls lib/tasks |  while read a; do
#     echo "    require('../lib/tasks/${a%.*}');" >> "$CMD_FILE"
# done

echo "    // providers" >> "$CMD_FILE"
ls lib/providers 2> /dev/null |  while read a; do
    echo "    require('../lib/providers/${a%.*}');" >> "$CMD_FILE"
done

echo "    // profiles" >> "$CMD_FILE"
ls lib/profiles 2> /dev/null |  while read a; do
    echo "    require('../lib/profiles/${a%.*}');" >> "$CMD_FILE"
done

echo "}" >> "$CMD_FILE"

############################

echo "// bin" >> "$CMD_FILE"
tail -n 1 "$BIN_FILE" >> "$CMD_FILE"

echo >> "$CMD_FILE"

############################

# echo "    // tasks" >> "$CMD_FILE"
# ls lib/tasks |  while read a; do
#     echo "    require('$PWD/lib/tasks/${a%.*}');" >> "$CMD_FILE"
# done

